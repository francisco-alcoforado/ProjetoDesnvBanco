/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

/**
 *
 * @author lab01
 */
import br.aeso.exercicio.fachada.Fachada;
import br.aeso.exercicio.fornecedor.Fornecedor;
import br.aeso.exercicio.produto.Produto;
import br.aeso.exercicio.produto.ProdutoJaCadastradoException;
import br.aeso.exercicio.produto.ProdutoNaoEncontradoException;
import br.aeso.exercicio.util.ComboItem;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
public class FormularioProduto extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioProduto
     */
    public FormularioProduto() {
        initComponents();
        this.carregarFornecedores();
    }
    
    public FormularioProduto(Produto produto) {
        initComponents();
        this.carregarFornecedores();
        if(produto == null){
            System.out.println("Produto Vasio on FormAtualizar!!!");
            return;
        }
        this.codigo = produto.getCodigo();
        this.nome.setText(produto.getNome());
        this.valor.setText("" + produto.getValor());
        this.Categoria.setText(produto.getCategoria());
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.fornecedor.getModel();
        for(int i = 0; i < model.getSize(); i++){
            ComboItem combo = (ComboItem) model.getElementAt(i);
            if(combo.getValue() == produto.getFornecedor().getCodigo()){
                this.fornecedor.setSelectedIndex(i);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbNome = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        lbCPF = new javax.swing.JLabel();
        valor = new javax.swing.JTextField();
        lbRua = new javax.swing.JLabel();
        Categoria = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        Erros = new javax.swing.JLabel();
        Atualizar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fornecedor = new javax.swing.JComboBox<>();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario Cliente");
        setPreferredSize(new java.awt.Dimension(880, 500));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        lbNome.setText("Nome");

        nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeFocusGained(evt);
            }
        });
        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        lbCPF.setText("Valor");

        valor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valorFocusGained(evt);
            }
        });
        valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorActionPerformed(evt);
            }
        });

        lbRua.setText("Categoria");

        Categoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CategoriaFocusGained(evt);
            }
        });
        Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoriaActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCadastrarMouseClicked(evt);
            }
        });
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        Atualizar.setText("Atualizar");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Fornecedor");

        fornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(594, Short.MAX_VALUE)
                .addComponent(Erros, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(243, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNome)
                            .addComponent(lbCPF)
                            .addComponent(lbRua)
                            .addComponent(jLabel1))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Categoria, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                            .addComponent(valor)
                            .addComponent(nome)
                            .addComponent(fornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(240, 240, 240))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRua)
                    .addComponent(Categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Atualizar)
                    .addComponent(btnCadastrar)
                    .addComponent(cancelar))
                .addGap(41, 41, 41)
                .addComponent(Erros, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void carregarFornecedores(){
        Fachada fachada = new Fachada();
        try {
            this.fornecedores = fachada.listarFornecedor();
            int i = 0;
            DefaultComboBoxModel model = (DefaultComboBoxModel) this.fornecedor.getModel();
            model.removeAllElements();
            ComboItem[] item;
            item = new ComboItem[this.fornecedores.size()];
            for(Fornecedor fornecedor : this.fornecedores){
               String strItem = fornecedor.getCodigo() + " - " + fornecedor.getNome();
               ComboItem combo = new ComboItem();
               combo.setLabel(strItem);
               combo.setValue(fornecedor.getCodigo());
               model.addElement(combo);
               i++;
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMouseClicked
        // TODO add your handling code here:
        boolean resposta = this.validar();
        if(resposta == false){
            Erros.setText("");
            Erros.setText("Campo(s) obrigatorio(s) mal preenchido!!!");
            Erros.setVisible(true);
            
        }
        String nome = this.nome.getText();
        double valor = Double.parseDouble(this.valor.getText());
        String categoria = this.Categoria.getText();
        ComboItem item = (ComboItem) this.fornecedor.getSelectedItem();
        int codigoFornecedor = item.getValue();
        Fornecedor fornecedor = this.getFornecedor(codigoFornecedor);
        Fachada fachada = new Fachada();
        Produto Produto = new Produto(1, nome, valor, categoria, fornecedor);
        try {
            fachada.cadastrarProduto(Produto);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ProdutoJaCadastradoException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ProdutoNaoEncontradoException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnCadastrarMouseClicked

    private void nomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_nomeFocusGained

    private void valorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_valorFocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_formFocusGained

    private void CategoriaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CategoriaFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_CategoriaFocusGained

    private void CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoriaActionPerformed

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        boolean resposta = this.validar();
        if(resposta == false){
            Erros.setText("");
            Erros.setText("Campo(s) obrigatorio(s) mal preenchido!!!");
            Erros.setVisible(true);
            
        }
        String nome = this.nome.getText();
        double valor = Double.parseDouble(this.valor.getText());
        String categoria = this.Categoria.getText();
        ComboItem item = (ComboItem) this.fornecedor.getSelectedItem();
        int codigoFornecedor = item.getValue();
        Fornecedor fornecedor = this.getFornecedor(codigoFornecedor);
        if(fornecedor == null){
            Erros.setText("Fornecedor Invalido!!!");
            Erros.setVisible(true);
            return;
        }
        Produto Produto = new Produto(this.codigo, nome, valor, categoria, fornecedor);
        System.out.println(Produto.getCodigo());
        Fachada fachada = new Fachada();
        try {
            fachada.atualizarProduto(Produto);
        } catch (ProdutoNaoEncontradoException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormularioProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AtualizarActionPerformed
    private Fornecedor getFornecedor(int codigo){
        for(Fornecedor fornecedor : this.fornecedores){
            if(codigo == fornecedor.getCodigo()){
                return fornecedor;
            }
        }
        return null;
    }
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarActionPerformed
    private boolean validar(){
        if(Double.isNaN(Double.parseDouble(this.valor.getText()))){
            return false;
        }
        
        String[] valores = new String[]{nome.getText(), this.Categoria.getText()};
        boolean valido = this.validarTexto(nome.getText());
        for(String valor : valores){
            if(this.validarTexto(valor) == false){
                return false;
            }
        }
        return true;
    }
    private boolean validarTexto(String valor){
        if(valor.isEmpty()){
            return false;
        }
        
        if(valor.trim().equals("")){
            return false;
        }
        
        String[] valores = new String[]{"*", "_", "'", "=", "+", "§", "{", "}", "[", "]", "?", ":", ";", "?", "|", "\\", "/", ","};
        int correta = 0;
        
        for(String caractere : valores){
            if(valor.indexOf(caractere) != -1){
                return false;
            }
            if(this.quantOcorrencia(caractere, valor) == valor.length()){
                return false;
            }
        } 
        return true;
    }
    
    private int quantOcorrencia(String needle, String stack){
        String[] valores = stack.split("");
        int quantOcorrencias = 0;
        for(String valor : valores){
           if(valor.equals(needle)){
               quantOcorrencias++;
           }
        }
        return quantOcorrencias;
    }
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioProduto().setVisible(true);
            }
        });
    }
    private int codigo;
    private ArrayList<Fornecedor> fornecedores;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JTextField Categoria;
    private javax.swing.JLabel Erros;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox<String> fornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbCPF;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbRua;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
