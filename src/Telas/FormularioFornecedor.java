/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

/**
 *
 * @author lab01
 */
import br.aeso.exercicio.fornecedor.Fornecedor;
import br.aeso.exercicio.fachada.Fachada;
import br.aeso.exercicio.fornecedor.EmailFornecedor;
import br.aeso.exercicio.fornecedor.FornecedorJaCadastradoException;
import br.aeso.exercicio.fornecedor.FornecedorNaoEncontradoException;
import br.aeso.exercicio.fornecedor.TelefoneFornecedor;
import br.aeso.exercicio.util.CNPJInvalidoException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
public class FormularioFornecedor extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioFornecedor
     */
    public FormularioFornecedor() {
        initComponents();
    }
    
    public FormularioFornecedor(Fornecedor Fornecedor) {
        initComponents();
        if(Fornecedor == null){
            System.out.println("Fornecedor Vasio on FormAtualizar!!!");
            return;
        }
        this.codigo = Fornecedor.getCodigo();
        this.nome.setText(Fornecedor.getNome());
        this.emailCodigo = 1;
        this.telefoneCodigo = 1;
        if(Fornecedor.getEmails().size() > 0){
            this.emailCodigo = Fornecedor.getEmails().get(0).getCodigo();
            this.email.setText(Fornecedor.getEmails().get(0).getEmail());
        }
        if(Fornecedor.getTelefones().size() > 0){
            this.telefoneCodigo = Fornecedor.getTelefones().get(0).getCodigo();
            this.telefone.setText(Fornecedor.getTelefones().get(0).getTelefone());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbNome = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lbTelefone = new javax.swing.JLabel();
        telefone = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        Erros = new javax.swing.JLabel();
        Atualizar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Formulario Fornecedor");
        setPreferredSize(new java.awt.Dimension(880, 500));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        lbNome.setText("Nome");

        nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeFocusGained(evt);
            }
        });
        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        lbEmail.setText("Email");

        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFocusGained(evt);
            }
        });

        jButton1.setText("jButton1");

        lbTelefone.setText("Telefone");

        telefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                telefoneFocusGained(evt);
            }
        });

        jButton2.setText("jButton2");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCadastrarMouseClicked(evt);
            }
        });
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        Atualizar.setText("Atualizar");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(597, Short.MAX_VALUE)
                .addComponent(Erros, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(250, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbEmail)
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbTelefone)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(lbNome)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(203, 203, 203))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(lbEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTelefone)
                    .addComponent(jButton2)
                    .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(Atualizar)
                    .addComponent(cancelar))
                .addGap(118, 118, 118)
                .addComponent(Erros, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMouseClicked
        // TODO add your handling code here:
        boolean resposta = this.validar();
        if(resposta == false){
            Erros.setText("");
            Erros.setText("Campo(s) obrigatorio(s) mal preenchido!!!");
            Erros.setVisible(true);
            
        }
        String nome = this.nome.getText();
        String email = this.email.getText();
        String telefone = this.telefone.getText();
        ArrayList<EmailFornecedor> emails = new ArrayList<EmailFornecedor>();
        emails.add(new EmailFornecedor(1, email, 1));
        ArrayList<TelefoneFornecedor> telefones = new ArrayList<TelefoneFornecedor>();
        telefones.add(new TelefoneFornecedor(1, telefone));
        Fornecedor Fornecedor = new Fornecedor(1, nome, emails, telefones);
        Fachada fachada = new Fachada();
        try {
            fachada.cadastrarFornecedor(Fornecedor);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FornecedorJaCadastradoException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CNPJInvalidoException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FornecedorNaoEncontradoException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCadastrarMouseClicked

    private void nomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_nomeFocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_formFocusGained

    private void emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_emailFocusGained

    private void telefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telefoneFocusGained
        // TODO add your handling code here:
        Erros.setVisible(false);
    }//GEN-LAST:event_telefoneFocusGained

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        boolean resposta = this.validar();
        if(resposta == false){
            Erros.setText("");
            Erros.setText("Campo(s) obrigatorio(s) mal preenchido!!!");
            Erros.setVisible(true);
            
        }
        String nome = this.nome.getText();
        String email = this.email.getText();
        String telefone = this.telefone.getText();
        ArrayList<EmailFornecedor> emails = new ArrayList<EmailFornecedor>();
        emails.add(new EmailFornecedor(this.emailCodigo, email, 1));
        ArrayList<TelefoneFornecedor> telefones = new ArrayList<TelefoneFornecedor>();
        telefones.add(new TelefoneFornecedor(this.telefoneCodigo, telefone));
        Fornecedor Fornecedor = new Fornecedor(this.codigo, nome, emails, telefones);
        System.out.println(Fornecedor.getCodigo());
        Fachada fachada = new Fachada();
        try {
            fachada.atualizarFornecedor(Fornecedor);
        } catch (FornecedorNaoEncontradoException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CNPJInvalidoException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormularioFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AtualizarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarActionPerformed
    private boolean validar(){
        String[] valores = new String[]{nome.getText(), email.getText(), this.prepararTelefone(telefone.getText())};
        boolean valido = this.validarTexto(nome.getText());
        int i = 0;
        for(String valor : valores){
            if(this.validarTexto(valor) == false){
                return false;
            }
            if(i == 1){
                if(this.validarEmail(valor) == false){
                  return false;   
                }
            }
            i++;
        }
        return true;
    }
    private String prepararTelefone(String telefone){
        String valor = telefone.replace(".", "");
        valor = telefone.replace("(", "");
        valor = telefone.replace(")", "");
        valor = telefone.replace("-", "");
        return valor;
    }
    private boolean validarEmail(String email){
        int posicao = email.indexOf("@");
        if(posicao == -1){
            return false;
        }
        String parte = email.substring(posicao);
        if(parte.indexOf(".") == -1){
            return false;
        }
        return true;
    }
    private boolean validarTexto(String valor){
        if(valor.isEmpty()){
            return false;
        }
        
        if(valor.trim().equals("")){
            return false;
        }
        
        String[] valores = new String[]{"*", "_", "'", "=", "+", "§", "{", "}", "[", "]", "?", ":", ";", "?", "|", "\\", "/", ","};
        int correta = 0;
        
        for(String caractere : valores){
            if(valor.indexOf(caractere) != -1){
                return false;
            }
            if(this.quantOcorrencia(caractere, valor) == valor.length()){
                return false;
            }
        } 
        return true;
    }
    
    private int quantOcorrencia(String needle, String stack){
        String[] valores = stack.split("");
        int quantOcorrencias = 0;
        for(String valor : valores){
           if(valor.equals(needle)){
               quantOcorrencias++;
           }
        }
        return quantOcorrencias;
    }
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioFornecedor().setVisible(true);
            }
        });
    }
    private int codigo;
    private int emailCodigo;
    private int telefoneCodigo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JLabel Erros;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField telefone;
    // End of variables declaration//GEN-END:variables
}
